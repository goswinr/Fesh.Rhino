<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">
  <PropertyGroup>
    <TargetExt>.rhp</TargetExt>
    <OutputType>Library</OutputType>
    <TargetFrameworks>net48</TargetFrameworks> <!--  net48 needed since RhinoCommon.dll 7.5 -->
    <UseWPF>true</UseWPF>
    <LangVersion>preview</LangVersion>

    <NeutralLanguage>en</NeutralLanguage>
    <SatelliteResourceLanguages>en</SatelliteResourceLanguages>    <!--to only have the english resources-->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <FSharpCoreIncludeDocFileInOutput>true</FSharpCoreIncludeDocFileInOutput>
    <!--<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects> needed ?-->

    <RootNamespace>Seff.Rhino</RootNamespace>
    <AssemblyName>Seff.Rhino</AssemblyName>
    <AssemblyTitle>Seff.Rhino</AssemblyTitle>
    <Title>Seff.Rhino</Title>
    <Product>Seff.Rhino</Product>
    <PackageId>Seff.Rhino</PackageId>

    <Version>1.0.0.0</Version>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <FileVersion>1.0.0.0</FileVersion>

    <Authors>GoswinR</Authors>
    <Copyright>Goswin Rothenthal 2021</Copyright>

    <Description>A Scripting Editor for FSharp in Rhino</Description>
    <ApplicationIcon>Media/logo.ico</ApplicationIcon>
    <Win32Resource>Media/logo.res</Win32Resource>    <!--  for Application Icon in explorer-->

    <Configurations>Release</Configurations>
    <PlatformTarget>x64</PlatformTarget><!--  x64 is required by Rhino, dont us just 'Platform' tag-->    
  </PropertyGroup>


  <PropertyGroup Condition="$(Configuration) == 'Debug' AND $([MSBuild]::IsOSPlatform(Windows))">
    <StartProgram>C:\Program Files\Rhino 7\System\Rhino.exe</StartProgram>
    <StartArguments></StartArguments>
    <StartAction>Program</StartAction>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Update="FSharp.Core" Version="6.0.3" /> <!--explicit reference 6.0.3 neded for FSharp.Compiler.Service-->

    <!--FSharp.Compiler.Service 41.0.3 needs to be refernceed here too because
     somehow FSharp.DependencyManager.Nuget doesn't get copied over from /Seff/binHosting/x64/net472
     (don't load it from Nuget see https://github.com/dotnet/fsharp/issues/10467#issuecomment-774430370) -->
    <PackageReference Include="FSharp.Compiler.Service" Version="41.0.3" />

    <!--this reference is needed for tooling only, it might not be installed on host PC. see also https://github.com/fsprojects/IfSharp/issues/213 -->
    <PackageReference Include="NETStandard.Library" Version="2.0.3" GeneratePathProperty="true" />

    
	<!-- Version 6.7 to match minimum of Rhino.Scripting. PrivateAssets="all" ExcludeAssets="runtime" to exclude these dlls from the output folder-->
	<PackageReference Include="RhinoCommon" Version="6.7.18199.22081" PrivateAssets="all" ExcludeAssets="runtime" />
	  

    <!--
	  <PackageReference Include="Seff" Version="0.0.3" />
	-->
	<Reference Include="Seff"           HintPath="..\Seff\binHosting\net472\Seff.dll" />	  
	<Reference Include="AvalonEditB"     HintPath="..\Seff\binHosting\net472\AvalonEditB.dll" />
	<Reference Include="AvalonLog"      HintPath="..\Seff\binHosting\net472\AvalonLog.dll" />
	<Reference Include="FsEx.Wpf"     HintPath="..\Seff\binHosting\net472\FsEx.Wpf.dll" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Media/logo.res" /> <!--  for Application Icon in explorer-->
    <Resource Include="Media/logo.ico" />

    <Compile Include="Src/AssemblyInfo.fs" />
    <Compile Include="Src/PlugIn.fs" />
    <Compile Include="Src/Commands.fs" />
 </ItemGroup>


  <!-- Replaces AfterBuild target,
    help: https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-well-known-item-metadata?view=vs-2015&redirectedfrom=MSDN
    see    https://stackoverflow.com/questions/43921992/how-can-i-use-beforebuild-and-afterbuild-targets-with-visual-studio-2017
    tasks: https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-task-reference?view=vs-2019
    better: https://stackoverflow.com/questions/44043918/running-a-target-before-the-corebuild
    -->

  <Target Name="CopyFilesOverAfterBuild" BeforeTargets="AfterBuild">

    <!-- take latest SynatxHighlightingFSharp.xshd from https://github.com/goswinr/Seff 
	this is only needed if there are recent chnages to this file that are not published with to the Seff nuget.  SynatxHighlightingFSharp.xshd is in the Seff nuget too.-->
    <Copy SourceFiles="../Seff/Src/SynatxHighlightingFSharp.xshd" DestinationFiles="$(TargetDir)SynatxHighlightingFSharp.xshd" ContinueOnError="true" />

    <!--dll is needed for editor tooling only, it might not be installed on host PC . seee also  https://github.com/fsprojects/IfSharp/issues/213 -->
    <Copy SourceFiles="$(PkgNETStandard_Library)/build/netstandard2.0/ref/netstandard.dll" DestinationFiles="$(TargetDir)netstandard.dll" ContinueOnError="false" />

    <!-- needed for intelisense, if netstandart.xml is not installed. -->
    <Copy SourceFiles="$(PkgNETStandard_Library)/build/netstandard2.0/ref/netstandard.xml" DestinationFiles="$(TargetDir)netstandard.xml" ContinueOnError="false" />
  </Target>

</Project>


